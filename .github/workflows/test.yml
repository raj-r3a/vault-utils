name: Vault-utils-integration-test
run-name: "${{ github.actor }} is testing vault-utils"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      vault:
        image: hashicorp/vault:latest
        ports:
          - 8200:8200
        env:
          VAULT_DEV_ROOT_TOKEN_ID: hvs.u07ot4OXvXTke9
          VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
        options: >-
          --cap-add=IPC_LOCK
        
    env:
      VAULT_URL: http://127.0.0.1:8200
      VAULT_TOKEN: hvs.u07ot4OXvXTke9
      ENCRYPTION_KEY_NAME: dev_key
      SECRETS_PATH: transit/
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: setup node:18
        uses: actions/setup-node@v6
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci --verbose

      - name: check if Vault is running, if not wait
        run: |
          for i in {1..30}; do
            if curl -s $VAULT_URL/v1/sys/health | grep -q '\"initialized\":true'; then
              echo "Vault is running"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "Vault is not running, we reached the maximum wait time"
              exit 1
            fi
            sleep 2
          done

      - name: Enable transit secrets engine
        run: |
          curl --header "X-Vault-Token: $VAULT_TOKEN" \
          --data '{"type": "transit"}' \
          $VAULT_URL/v1/sys/mounts/transit || true

      - name: create the encryption key for using in secrets engine
        run: |
          curl --header "X-Vault-Token: $VAULT_TOKEN" \
          --request POST $VAULT_URL/v1/transit/keys/$ENCRYPTION_KEY_NAME \
          --data '{"type": "aes256-gcm96"}' || true

      - name: verify encryption key setup
        run: |
          echo "Verifying encryption key setup"

          curl --header "X-Vault-Token: $VAULT_TOKEN" \
          --request GET $VAULT_URL/v1/transit/keys/$ENCRYPTION_KEY_NAME || true

          echo "Encryption key setup verified"

      - name: Run integration test
        run: npm run test

      - name: clean up
        run: |
          curl --header "X-Vault-Token: $VAULT_TOKEN" \
          --request DELETE $VAULT_URL/v1/transit/keys/$ENCRYPTION_KEY_NAME || true

          curl --header "X-Vault-Token: $VAULT_TOKEN" \
          --request DELETE $VAULT_URL/v1/sys/mounts/transit || true